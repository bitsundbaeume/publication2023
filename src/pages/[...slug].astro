---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "../layouts/PublicationLayout.astro";
import TableOfContents from "@components/PublicationToc.vue";
import { Breadcrumbs } from "astro-breadcrumbs";
import { Icon } from "astro-icon";
import "@styles/plugins/_astro-breadcrumbs.scss";
import Author from "@components/content/Author.astro";
import Tag from "@components/content/Tag.astro";
import { Img } from "astro-imagetools/components";

export async function getStaticPaths() {
  const publication2023Entries = await getCollection("publication2023");

  return publication2023Entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry, collection: publication2023Entries },
  }));
}

interface Props {
  entry: CollectionEntry<"publication2023">;
  collection: CollectionEntry<"publication2023">[];
}
const { entry, collection } = Astro.props;
const { Content, headings } = await entry.render();

/**
 * Filter the collection to only include the items that are needed
 */
const filteredCollection = collection.map((item) => {
  return {
    title: item.data.title,
    slug: item.slug,
    isCurrent: item.id === entry.id,
    chapter: item.data.chapter,
    order: item.data.order,
  };
});

/**
 * Group the collection by chapter
 */
const groupedByChapter = filteredCollection.reduce<{
  [key: number]: typeof filteredCollection;
}>((acc, item) => {
  const chapter = item.chapter;
  if (!acc[chapter]) {
    acc[chapter] = [];
  }
  acc[chapter].push(item);
  acc[chapter].sort((a, b) => a.order - b.order);

  return acc;
}, {});

/**
 * Get the next page
 *
 * @param chapter
 * @param order
 * @param collection
 */
const nextPage = (
  chapter: number,
  order: number,
  collection: CollectionEntry<"publication2023">[],
): string | null => {
  const filteredCollection = collection.filter(
    (item) => item.data.chapter === chapter,
  );
  const nextPageOrder = order + 1;
  const nextPage = filteredCollection.find(
    (item) => item.data.order === nextPageOrder,
  );

  if (nextPage) {
    return `/${nextPage.slug}`;
  } else {
    const nextChapter = chapter + 1;
    const nextChapterCollection = collection.filter(
      (item) => item.data.chapter === nextChapter,
    );
    if (nextChapterCollection.length > 0) {
      const firstPage = nextChapterCollection[0];
      return `/${firstPage.slug}`;
    } else {
      return null;
    }
  }
};

/**
 * Sort the collection by the order property
 */
const sortedCollection = filteredCollection.sort((a, b) => a.order - b.order);

const chapterTitles = [
  "0. Introduction",
  "1. Redefining progress: confronting the challenges of digitalisation and sustainability",
  "2. Values for transformation: foundation for a socio-ecological digitalisation",
  "3. Transformative change: new concepts and paradigms to upgrade current socio-technicalstructures",
  "4. Beyond business as usual: use cases for more sustainable tech design",
  "5. Politics under pressure: necessary changes on the political level",
  "6. A collective effort: the power of civil society driving sustainable change",
  "7. Closure",
];

/**
 * If the SEO title is not set, use the title of the page
 */
const useSeoOrFallback = () => {
  return {
    title: entry.data.seo?.title || entry.data.title,
    metaTitle: entry.data.seo?.metaTitle || entry.data.title,
    metaDescription:
      entry.data.seo?.metaDescription ||
      `${chapterTitles[entry.data.chapter]}: ${
        entry.data.title
      } - Shaping Digital Transformation for a Sustainable Society`,
  };
};

const currentChapter = entry.data.chapter;
const currentPageOrder = entry.data.order;
const authors = entry.data.authors;
const tag = entry.data.tag;
---

<Layout
  seo={useSeoOrFallback()}
  contentModifierClass="publication"
  chapterThemeClass={currentChapter}
>
  <Breadcrumbs indexText="home">
    <Icon slot="separator" name="lucide:chevron-right" width="24" height="24" />
  </Breadcrumbs>

  {
    entry.data.headerImage && (
      <figure>
        <Img
          src={entry.data.headerImage.src}
          alt={entry.data.headerImage.alt}
          loading="eager"
          attributes={{
            img: {
              fetchpriority: "high",
              class: "c-box__image",
            },
          }}
        />
        <figcaption>CC BY: {entry.data.headerImage.caption}</figcaption>
      </figure>
    )
  }

  {authors && authors.length > 0 && <Author authors={entry.data.authors} />}

  {tag && <Tag tag={entry.data.tag} />}

  <Content />

  {
    nextPage(currentChapter, currentPageOrder, collection) && (
      <a
        class="c-button c-button--primary o-publication__next-page"
        href={nextPage(currentChapter, currentPageOrder, collection)}
      >
        Next page
        <Icon name="lucide:chevron-right" width="24" height="24" />
      </a>
    )
  }

  <TableOfContents
    headings={headings}
    chapters={groupedByChapter}
    chapterTitles={chapterTitles}
    client:load
    slot="sidebar"
  />
</Layout>
