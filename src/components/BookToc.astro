---
import "@styles/components/_book-toc.scss";
import type { BookToc } from "@components/book-toc-types";

interface Props extends BookToc {
  toc: BookToc["toc"];
}

const { toc } = Astro.props;
---

<section class="c-book-toc" id="toc">
  <h2 class="c-book-toc__headline">Table of Contents</h2>
  <nav class="c-book-toc__nav">
    {
      toc.map((item) => (
        <>
          <h3>{item.headline}</h3>
          {item.contents &&
            item.contents.map((contents) => (
              <ul class="c-book-toc__menu">
                <li class="c-book-toc__menu-item">
                  <a href={contents.url} class="c-book-toc__menu-link">
                    <span class="c-book-toc__title">{contents.title}</span>
                    {contents.pageNumber && (
                      <span class="c-book-toc__page-number">
                        {contents.pageNumber}
                      </span>
                    )}
                  </a>
                </li>
              </ul>
            ))}
        </>
      ))
    }
  </nav>
  <img
    src="images/pixels/pixel-box-img.svg"
    alt="Pixel"
    loading="lazy"
    decoding="async"
    class="c-book-toc__pixel"
  />
</section>

<script is:inline>
  // Find all buttons with the `alert` class on the page.
  const buttons = document.querySelectorAll(".c-book-toc__menu-link");

  // Handle clicks on each button.
  buttons.forEach((button) => {
    button.addEventListener("click", (event) => {
      const hash = event.target.parentElement.getAttribute("href");
      window.location.hash = hash;
    });
  });
</script>
